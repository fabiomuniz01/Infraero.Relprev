// <auto-generated />
using System;
using Infraero.Relprev.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infraero.Relprev.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200903025511_Relprev042-ntit")]
    partial class Relprev042ntit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Assunto", b =>
                {
                    b.Property<int>("CodAssunto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_ASSUNTO")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("DscAssunto")
                        .IsRequired()
                        .HasColumnName("DSC_ASSUNTO")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao do assunto")
                        .HasMaxLength(255);

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.HasKey("CodAssunto");

                    b.ToTable("CAD_ASSUNTO");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.AtribuicaoRelato", b =>
                {
                    b.Property<int>("CodAtribuicaoRelato")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_ATRIBUICAO_RELATO")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodRelato")
                        .HasColumnName("COD_RELATO")
                        .HasColumnType("int")
                        .HasComment("Código sequencial do relato");

                    b.Property<int>("CodResponsavelTecnico")
                        .HasColumnName("COD_RESPONSAVEL_TECNICO")
                        .HasColumnType("int")
                        .HasComment("Código do responsavel SGSO da atribuicao do relato");

                    b.Property<int>("CodSituacaoAtribuicao")
                        .HasColumnName("COD_SITUACAO_ATRIBUICAO")
                        .HasColumnType("int")
                        .HasComment("Código de situação da atribuição");

                    b.Property<string>("CodUsuarioAtribuidor")
                        .HasColumnName("COD_USUARIO_ATRIBUIDOR")
                        .HasColumnType("nvarchar(455)")
                        .HasComment("Código sequencial do usuário atribuidor. OBS: caso valor nulo, usuario atribuidor igual a SistemaRelprev")
                        .HasMaxLength(455);

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("DscParecerTecnico")
                        .HasColumnName("DSC_PARECER_TECNICO")
                        .HasColumnType("nvarchar(455)")
                        .HasComment("Descrição do parecer técnico")
                        .HasMaxLength(455);

                    b.Property<DateTime>("DthAtribuicao")
                        .HasColumnName("DTH_ATRIBUICAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data Hora da atribuição");

                    b.Property<DateTime?>("DthFimAtendimento")
                        .HasColumnName("DTH_FIM_ATENDIMENTO")
                        .HasColumnType("datetime2")
                        .HasComment("Data Hora fim do atendimento");

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<string>("ObsAtribuicao")
                        .HasColumnName("DSC_OBS_ATRIBUICAO")
                        .HasColumnType("nvarchar(455)")
                        .HasComment("Descrição da observação da atribuição")
                        .HasMaxLength(455);

                    b.HasKey("CodAtribuicaoRelato");

                    b.HasIndex("CodRelato");

                    b.HasIndex("CodResponsavelTecnico");

                    b.ToTable("CAD_ATRIBUICAO_RELATO");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.ConfigurarAmbiente", b =>
                {
                    b.Property<int>("CodConfigurarAmbiente")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_CONFIG_AMBIENTE")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<int>("DevolvidoParaComplemento")
                        .HasColumnName("QTD_DEVOLVIDO_PARA_COMPLEMENTO")
                        .HasColumnType("int")
                        .HasComment("Tempo de resposta do parecer técnico quando o mesmo é rejeitado e devolvido para complemento");

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<int>("ParecerTecnico")
                        .HasColumnName("QTD_PARECER_TECNICO")
                        .HasColumnType("int")
                        .HasComment("Tempo que o técnico deve ter para responder um parecer técnico");

                    b.Property<int>("TempoNotificacaoParaResponder")
                        .HasColumnName("QTD_TEMPO_NOTIFICACAO_PARA_RESPONDER")
                        .HasColumnType("int")
                        .HasComment("Tempo em que dever ser notificado por e-mail as Respostas dos Pareceres Técnicos");

                    b.Property<string>("TextoMotivoCancelamento")
                        .IsRequired()
                        .HasColumnName("TXT_MOTIVO_CANCELAMENTO")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("Texto descritivo a ser inserido no e-mail de notificação em caso de cancelamento do relato")
                        .HasMaxLength(1000);

                    b.HasKey("CodConfigurarAmbiente");

                    b.ToTable("CAD_CONFIG_AMBIENTE");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("CodEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_EMPRESA")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<string>("CpfCriadoPor")
                        .HasColumnName("NUM_CPF_CRIADO_POR")
                        .HasColumnType("nvarchar(18)")
                        .HasComment("Numero cpf criado por")
                        .HasMaxLength(18);

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnName("DTH_REGISTRO")
                        .HasColumnType("datetime2")
                        .HasComment("Data Hora de registro");

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<string>("NomRazaoSocial")
                        .IsRequired()
                        .HasColumnName("NOM_RAZAO_SOCIAL")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("Empresa órgão público")
                        .HasMaxLength(250);

                    b.Property<string>("NumCnpj")
                        .IsRequired()
                        .HasColumnName("NUM_CNPJ")
                        .HasColumnType("nvarchar(18)")
                        .HasComment("CNPJ da empresa / órgão público")
                        .HasMaxLength(18);

                    b.Property<string>("NumTelefone")
                        .HasColumnName("NUM_TELEFONE")
                        .HasColumnType("nvarchar(14)")
                        .HasComment("Telefone da empresa")
                        .HasMaxLength(14);

                    b.HasKey("CodEmpresa");

                    b.ToTable("CAD_EMPRESA");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Funcionalidade", b =>
                {
                    b.Property<int>("CodFuncionalidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_FUNCIONALIDADE")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodModulo")
                        .HasColumnName("COD_MODULO")
                        .HasColumnType("int")
                        .HasComment("Descriçao do Funcionalidade");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<string>("NomFuncionalidade")
                        .IsRequired()
                        .HasColumnName("NOM_FUNCIONALIDADE")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("Descriçao do Funcionalidade")
                        .HasMaxLength(100);

                    b.HasKey("CodFuncionalidade");

                    b.HasIndex("CodModulo");

                    b.ToTable("TAB_FUNCIONALIDADE");

                    b.HasData(
                        new
                        {
                            CodFuncionalidade = 1,
                            CodModulo = 1,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Consultar,Incluir,Excluir,Alterar"
                        },
                        new
                        {
                            CodFuncionalidade = 2,
                            CodModulo = 2,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Consultar,Incluir,Excluir,Alterar"
                        },
                        new
                        {
                            CodFuncionalidade = 3,
                            CodModulo = 3,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Consultar,Incluir,Excluir,Alterar"
                        },
                        new
                        {
                            CodFuncionalidade = 4,
                            CodModulo = 4,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Consultar,Incluir,Excluir,Alterar"
                        },
                        new
                        {
                            CodFuncionalidade = 5,
                            CodModulo = 5,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Consultar,Incluir,Excluir,Alterar"
                        },
                        new
                        {
                            CodFuncionalidade = 6,
                            CodModulo = 6,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Consultar,Incluir,Excluir,Alterar"
                        },
                        new
                        {
                            CodFuncionalidade = 7,
                            CodModulo = 7,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Consultar,Incluir,Excluir,Alterar"
                        },
                        new
                        {
                            CodFuncionalidade = 8,
                            CodModulo = 8,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Consultar,Incluir,Excluir,Alterar"
                        },
                        new
                        {
                            CodFuncionalidade = 9,
                            CodModulo = 9,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Consultar,Incluir,Excluir,Alterar"
                        },
                        new
                        {
                            CodFuncionalidade = 10,
                            CodModulo = 10,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Consultar,Cadastrar,Classificar,Cancelar,Finalizar"
                        },
                        new
                        {
                            CodFuncionalidade = 11,
                            CodModulo = 11,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Enviar,Consultar,Incluir,Excluir"
                        },
                        new
                        {
                            CodFuncionalidade = 12,
                            CodModulo = 12,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Cancelar,Detalhar,Executar,Finalizar,Atribuir"
                        },
                        new
                        {
                            CodFuncionalidade = 13,
                            CodModulo = 13,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Completar,Avaliar,Responder"
                        },
                        new
                        {
                            CodFuncionalidade = 14,
                            CodModulo = 14,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Importar,Configurar"
                        },
                        new
                        {
                            CodFuncionalidade = 15,
                            CodModulo = 15,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomFuncionalidade = "Consultar,Incluir,Alterar"
                        });
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.HistoricoParecer", b =>
                {
                    b.Property<int>("CodHistoricoParecer")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_HISTORICO_PARECER")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodParecer")
                        .HasColumnName("COD_PARECER")
                        .HasColumnType("int")
                        .HasComment("Codigo sequencial do Parecer");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("DscComplementoParecer")
                        .HasColumnName("DSC_COMPLEMENTO_PARECER")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao do complemento do parecer")
                        .HasMaxLength(255);

                    b.Property<string>("DscMotivoDevolucao")
                        .HasColumnName("DSC_MOTIVO_DEVOLUCAO")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao do motivo da devolução")
                        .HasMaxLength(255);

                    b.Property<string>("DscParecer")
                        .HasColumnName("DSC_PARECER")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao do parecer")
                        .HasMaxLength(255);

                    b.Property<string>("DscUltimaOcorrencia")
                        .HasColumnName("DSC_ULTIMA_OCORRENCIA")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao da última Ocorrência")
                        .HasMaxLength(255);

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<int>("FlgStatusParecer")
                        .HasColumnName("FLG_STATUS_RELATO")
                        .HasColumnType("int")
                        .HasComment("Status do parecer");

                    b.HasKey("CodHistoricoParecer");

                    b.ToTable("HST_CAD_PARECER");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.HistoricoRelato", b =>
                {
                    b.Property<int>("CodHistoricoRelato")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_HISTORICO_RELATO")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodRelato")
                        .HasColumnName("COD_RELATO")
                        .HasColumnType("int")
                        .HasComment("Codigo sequencial do relato");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("DscAtribuicao")
                        .HasColumnName("DSC_ATRIBUICAO")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao do status de atribuição")
                        .HasMaxLength(255);

                    b.Property<string>("DscCancelamento")
                        .HasColumnName("DSC_CANCELAMENTO")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao do status de cancelamento")
                        .HasMaxLength(255);

                    b.Property<string>("DscClassificacao")
                        .HasColumnName("DSC_CLASSIFICACAO")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao do status de classificação")
                        .HasMaxLength(255);

                    b.Property<string>("DscFinalizacao")
                        .HasColumnName("DSC_FINALIZACAO")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao do status de finalização")
                        .HasMaxLength(255);

                    b.Property<string>("DscNaoIniciado")
                        .HasColumnName("DSC_NAO_INICIADO")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao do status nao iniciado")
                        .HasMaxLength(255);

                    b.Property<string>("DscParecer")
                        .HasColumnName("DSC_PARECER")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao do status de finalização")
                        .HasMaxLength(255);

                    b.Property<string>("DscUltimaOcorrencia")
                        .HasColumnName("DSC_ULTIMA_OCORRENCIA")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao do assunto")
                        .HasMaxLength(255);

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.HasKey("CodHistoricoRelato");

                    b.ToTable("HST_CAD_RELATO");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Local", b =>
                {
                    b.Property<int>("CodLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_LOCAL")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodUnidadeInfraestrutura")
                        .HasColumnName("COD_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("int")
                        .HasComment("Codigo sequencial da unidade de infraestrutura");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("DscLocal")
                        .IsRequired()
                        .HasColumnName("DSC_LOCAL")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descrição do local da ocorrencia")
                        .HasMaxLength(255);

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.HasKey("CodLocal");

                    b.HasIndex("CodUnidadeInfraestrutura");

                    b.ToTable("CAD_LOCAL");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Modulo", b =>
                {
                    b.Property<int>("CodModulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_MODULO")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<string>("NomModulo")
                        .IsRequired()
                        .HasColumnName("NOM_Modulo")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("Descriçao do Modulo")
                        .HasMaxLength(100);

                    b.HasKey("CodModulo");

                    b.ToTable("TAB_MODULO");

                    b.HasData(
                        new
                        {
                            CodModulo = 1,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "UnidadeInfraestrutura"
                        },
                        new
                        {
                            CodModulo = 2,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "Empresa"
                        },
                        new
                        {
                            CodModulo = 3,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "ResponsavelTecnico"
                        },
                        new
                        {
                            CodModulo = 4,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "Assunto"
                        },
                        new
                        {
                            CodModulo = 5,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "SubAssunto"
                        },
                        new
                        {
                            CodModulo = 6,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "Local"
                        },
                        new
                        {
                            CodModulo = 7,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "SubLocal"
                        },
                        new
                        {
                            CodModulo = 8,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "Usuario"
                        },
                        new
                        {
                            CodModulo = 9,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "Perfil"
                        },
                        new
                        {
                            CodModulo = 10,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "Relatos"
                        },
                        new
                        {
                            CodModulo = 11,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "AtribuirResponsavelRelato"
                        },
                        new
                        {
                            CodModulo = 12,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "AtendimentoTecnico"
                        },
                        new
                        {
                            CodModulo = 13,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "ParecerTecnico"
                        },
                        new
                        {
                            CodModulo = 14,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "ContratoSmartStream"
                        },
                        new
                        {
                            CodModulo = 15,
                            CriadoPor = "SistemaRelprev",
                            DataCriacao = new DateTime(2020, 6, 25, 20, 43, 16, 940, DateTimeKind.Local).AddTicks(838),
                            FlagAtivo = false,
                            NomModulo = "ConfigurarAmbiente"
                        });
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Parecer", b =>
                {
                    b.Property<int>("CodParecer")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_PARECER")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodRelato")
                        .HasColumnName("COD_RELATO")
                        .HasColumnType("int")
                        .HasComment("Relato a qual o parecer é atribuído");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("DscComplemento")
                        .HasColumnName("DSC_COMPLEMENTO_PARECER")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Descrição do complemento do parecer")
                        .HasMaxLength(500);

                    b.Property<string>("DscMotivoDevolucao")
                        .HasColumnName("DSC_MOTIVO_DEVOLUCAO")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Descrição do motivo da devolucao")
                        .HasMaxLength(500);

                    b.Property<string>("DscParecer")
                        .IsRequired()
                        .HasColumnName("DSC_PARECER")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Descrição do parecer")
                        .HasMaxLength(500);

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<int>("FlgStatusParecer")
                        .HasColumnName("FLG_STATUS_RELATO")
                        .HasColumnType("int")
                        .HasComment("Status do parecer");

                    b.HasKey("CodParecer");

                    b.ToTable("CAD_PARECER");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.ParecerArquivo", b =>
                {
                    b.Property<int>("CodParecerArquivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_PARECER_ARQUIVO")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<string>("Arquivo")
                        .IsRequired()
                        .HasColumnName("NOM_ARQUIVO_UNICO")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Nome unico do arquivo")
                        .HasMaxLength(500);

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasColumnName("DIR_CAMINHO")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Diretorio do arquivo")
                        .HasMaxLength(500);

                    b.Property<int>("CodParecer")
                        .HasColumnName("COD_PARECER")
                        .HasColumnType("int")
                        .HasComment("Codigo sequencial do PARECER");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnName("NOM_ARQUIVO")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Nome original do arquivo")
                        .HasMaxLength(200);

                    b.HasKey("CodParecerArquivo");

                    b.HasIndex("CodParecer");

                    b.ToTable("CAD_PARECER_ARQUIVO");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Perfil", b =>
                {
                    b.Property<int>("CodPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_PERFIL")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("DscPerfil")
                        .IsRequired()
                        .HasColumnName("DSC_PERFIL")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descriçao do Perfil")
                        .HasMaxLength(255);

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<string>("NomPerfil")
                        .IsRequired()
                        .HasColumnName("NOM_PERFIL")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("Nome do Perfil")
                        .HasMaxLength(100);

                    b.HasKey("CodPerfil");

                    b.ToTable("CAD_PERFIL");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Relato", b =>
                {
                    b.Property<int>("CodRelato")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_RELATO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodAssunto")
                        .HasColumnName("COD_ASSUNTO")
                        .HasColumnType("int")
                        .HasComment("Assunto classificado");

                    b.Property<int>("CodLocal")
                        .HasColumnName("COD_LOCAL")
                        .HasColumnType("int")
                        .HasComment("Local classificado");

                    b.Property<int>("CodSubAssunto")
                        .HasColumnName("COD_SUB_ASSUNTO")
                        .HasColumnType("int")
                        .HasComment("Sub assunto classificado");

                    b.Property<int>("CodSubLocal")
                        .HasColumnName("COD_SUB_LOCAL")
                        .HasColumnType("int")
                        .HasComment("Sub local classificado");

                    b.Property<int>("CodUnidadeInfraestrutura")
                        .HasColumnName("COD_UNIDADE_ESINFRAESTRUTURA")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime>("DatOcorrencia")
                        .HasColumnName("DAT_OCORRENCIA")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("DscAcoesCorretivasRecomendadas")
                        .HasColumnName("DSC_ACOES_CORRETIVAS_RECOMENDADAS")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("DscEnvolvidosOcorrencia")
                        .IsRequired()
                        .HasColumnName("DSC_ENVOLVIDO_OCORRENCIA")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("DscLocalOcorrenciaRelator")
                        .IsRequired()
                        .HasColumnName("DSC_LOCAL_OCORRENCIARELATOR")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DscMotivoCancelamento")
                        .HasColumnName("DSC_MOTIVO_CANCELAMENTO")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("DscOcorrenciaRelator")
                        .IsRequired()
                        .HasColumnName("DSC_OCORRENCIA_RELATOR")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("EmailRelator")
                        .HasColumnName("EMAIL_RELATOR")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<int>("FlgStatusRelato")
                        .HasColumnName("FLG_STATUS_RELATO")
                        .HasColumnType("int");

                    b.Property<string>("HorOcorrencia")
                        .IsRequired()
                        .HasColumnName("HOR_OCORRENCIA")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("NomEmpresaRelator")
                        .HasColumnName("NOM_EMPRESA_RELATOR")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NomRelator")
                        .HasColumnName("NOM_RELATOR")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NumRelato")
                        .HasColumnName("NUM_RELATO")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("NumTelefoneRelator")
                        .HasColumnName("NUM_TELEFONE_RELATOR")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("CodRelato");

                    b.HasIndex("CodUnidadeInfraestrutura");

                    b.ToTable("CAD_RELATO");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.RelatoArquivo", b =>
                {
                    b.Property<int>("CodRelatoArquivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_RELATO_ARQUIVO")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<string>("Arquivo")
                        .IsRequired()
                        .HasColumnName("NOM_ARQUIVO_UNICO")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Nome unico do arquivo")
                        .HasMaxLength(500);

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasColumnName("DIR_CAMINHO")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Diretorio do arquivo")
                        .HasMaxLength(500);

                    b.Property<int>("CodRelato")
                        .HasColumnName("COD_RELATO")
                        .HasColumnType("int")
                        .HasComment("Codigo sequencial do relato");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnName("NOM_ARQUIVO")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Nome original do arquivo")
                        .HasMaxLength(200);

                    b.HasKey("CodRelatoArquivo");

                    b.HasIndex("CodRelato");

                    b.ToTable("CAD_RELATO_ARQUIVO");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.ResponsavelTecnico", b =>
                {
                    b.Property<int>("CodResponsavelTecnico")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_RESPONSAVEL_TECNICO")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodUnidadeInfraestrutura")
                        .HasColumnName("COD_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("int")
                        .HasComment("Codigo sequencia da unidade de infraestrutura");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("EndEmail")
                        .HasColumnName("END_RESPONSAVEL_TECNICO")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Endereço eletrônico do Responsável Técnico ")
                        .HasMaxLength(50);

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<bool>("FlagGestorSgso")
                        .HasColumnName("FLG_GESTOR_SGSO")
                        .HasColumnType("bit")
                        .HasComment("Flag gestor sgso site");

                    b.Property<string>("NomResponsavelTecnico")
                        .IsRequired()
                        .HasColumnName("NOM_RESPONSAVEL_TECNICO")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Nome do Responsável Técnico  ")
                        .HasMaxLength(50);

                    b.Property<string>("NumCpf")
                        .IsRequired()
                        .HasColumnName("NUM_CPF")
                        .HasColumnType("nvarchar(14)")
                        .HasComment("Número do CPF do Responsável Técnico ")
                        .HasMaxLength(14);

                    b.Property<string>("NumDocumento")
                        .HasColumnName("NUM_DOCUMENTO")
                        .HasColumnType("nvarchar(15)")
                        .HasComment("Número do documento de correspondência")
                        .HasMaxLength(15);

                    b.Property<string>("NumTelefone")
                        .IsRequired()
                        .HasColumnName("NUM_TELEFONE")
                        .HasColumnType("nvarchar(14)")
                        .HasComment("Número do telefone")
                        .HasMaxLength(14);

                    b.HasKey("CodResponsavelTecnico");

                    b.ToTable("CAD_RESPONSAVEL_TECNICO");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.SubAssunto", b =>
                {
                    b.Property<int>("CodSubAssunto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_SUBASSUNTO")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodAssunto")
                        .HasColumnName("COD_ASSUNTO")
                        .HasColumnType("int")
                        .HasComment("Código sequencial do subassunto");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("DscSubAssunto")
                        .IsRequired()
                        .HasColumnName("DSC_SUBASSUNTO")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Descrição do subassunto")
                        .HasMaxLength(255);

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.HasKey("CodSubAssunto");

                    b.HasIndex("CodAssunto");

                    b.ToTable("CAD_SUBASSUNTO");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.SubLocal", b =>
                {
                    b.Property<int>("CodSubLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_SUBLOCAL")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodLocal")
                        .HasColumnName("COD_LOCAL")
                        .HasColumnType("int")
                        .HasComment("Código sequencial do local");

                    b.Property<int>("CodUnidadeInfraestrutura")
                        .HasColumnName("COD_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("int")
                        .HasComment("Código sequencial da unidade de infraestrutura");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("DscSubLocal")
                        .IsRequired()
                        .HasColumnName("DSC_SUBLOCAL")
                        .HasColumnType("nvarchar(300)")
                        .HasComment("Descrição do sublocal da ocorrencia")
                        .HasMaxLength(300);

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.HasKey("CodSubLocal");

                    b.HasIndex("CodLocal");

                    b.ToTable("CAD_SUBLOCAL");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.UnidadeInfraestrutura", b =>
                {
                    b.Property<int>("CodUnidadeInfraestrutura")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<string>("CodUnidade")
                        .IsRequired()
                        .HasColumnName("COD_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Código da unidade");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DSC_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Detalhamento da Unidade de Infraestrutura");

                    b.Property<DateTime>("DtFimVigencia")
                        .HasColumnName("DTH_FIM_VIGENCIA")
                        .HasColumnType("datetime2")
                        .HasComment("Data de Fim do período de vigência da Unidade cadastrada");

                    b.Property<DateTime>("DtIniVigencia")
                        .HasColumnName("DTH_INI_VIGENCIA")
                        .HasColumnType("datetime2")
                        .HasComment("Data de Início do período de vigência da Unidade cadastrada");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnName("END_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Localização da Unidade de Infraestrutura");

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<string>("NomUnidadeÌnfraestrutura")
                        .IsRequired()
                        .HasColumnName("NOM_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Localização da Unidade de Infraestrutura");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnName("SIG_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("nvarchar(8)")
                        .HasComment("Sigla da unidade")
                        .HasMaxLength(8);

                    b.HasKey("CodUnidadeInfraestrutura");

                    b.ToTable("CAD_UNIDADE_INFRAESTRUTURA");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("CodUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_USUARIO")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodEmpresa")
                        .HasColumnName("COD_EMPRESA")
                        .HasColumnType("int")
                        .HasComment("Código sequencial da empresa");

                    b.Property<string>("CodPerfil")
                        .HasColumnName("COD_PERFIL")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("Código do perfil do usuário")
                        .HasMaxLength(250);

                    b.Property<int>("CodUnidadeInfraestrutura")
                        .HasColumnName("COD_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("int")
                        .HasComment("Código sequencial do unidade de infraestrutura");

                    b.Property<string>("CodUsuarioLogin")
                        .HasColumnName("COD_USUARIO_LOGIN")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Código do login do usuário");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("END_ENDERECO_ELETRONICO")
                        .HasColumnType("nvarchar(150)")
                        .HasComment("Endereço eletrônico válido do usuário")
                        .HasMaxLength(150);

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<string>("NomPerfil")
                        .HasColumnName("NOM_PERFIL")
                        .HasColumnType("nvarchar(150)")
                        .HasComment("Nome d perfil do usuário")
                        .HasMaxLength(150);

                    b.Property<string>("NomUsuario")
                        .IsRequired()
                        .HasColumnName("NOM_USUARIO")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Descrição completa do nome do usuário")
                        .HasMaxLength(60);

                    b.Property<string>("NumCpf")
                        .IsRequired()
                        .HasColumnName("NUM_CPF")
                        .HasColumnType("nvarchar(14)")
                        .HasComment("Número do CPF do usuário")
                        .HasMaxLength(14);

                    b.Property<string>("NumTelefone")
                        .IsRequired()
                        .HasColumnName("NUM_TELEFONE")
                        .HasColumnType("nvarchar(14)")
                        .HasComment("Telefone de contato do usuário")
                        .HasMaxLength(14);

                    b.HasKey("CodUsuario");

                    b.ToTable("CAD_USUARIO");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.VinculoResponsavelEmpresa", b =>
                {
                    b.Property<int>("CodVinculoResponsavelEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_VINCULO_RESPONSAVEL_EMPRESA")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodEmpresa")
                        .HasColumnName("COD_EMPRESA")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela empresa");

                    b.Property<int>("CodResponsavelTecnico")
                        .HasColumnName("COD_RESPONSAVEL_TECNICO")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela responsavel tecnico");

                    b.Property<int>("CodUnidadeInfraestrutura")
                        .HasColumnName("COD_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela unidade de infraestrutura");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.HasKey("CodVinculoResponsavelEmpresa");

                    b.HasIndex("CodEmpresa");

                    b.HasIndex("CodResponsavelTecnico");

                    b.ToTable("CAD_VINCULO_RESPONSAVEL_EMPRESA");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.VinculoUnidadeEmpresa", b =>
                {
                    b.Property<int>("CodVinculoUnidadeEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEQ_VINCULO_UNIDADE_EMPRESA")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnName("NOM_USU_ALTERACAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário de realizou a alteração")
                        .HasMaxLength(256);

                    b.Property<int>("CodEmpresa")
                        .HasColumnName("COD_EMPRESA")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela empresa");

                    b.Property<int>("CodUnidadeInfraestrutura")
                        .HasColumnName("COD_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("int")
                        .HasComment("Sequencial da tabela unidade de infraestrutura");

                    b.Property<string>("CriadoPor")
                        .HasColumnName("NOM_USU_INCLUSAO")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Usuário que realizou a inclusão")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DTH_ALTERACAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data de alteração");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DTH_INCLUSAO")
                        .HasColumnType("datetime2")
                        .HasComment("Data da inclusão");

                    b.Property<bool>("FlagAtivo")
                        .HasColumnName("FLG_ATIVO")
                        .HasColumnType("bit")
                        .HasComment("Indicador de registro ativo");

                    b.Property<string>("NomEmpresa")
                        .HasColumnName("NOM_EMPRESA")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Nome da empresa")
                        .HasMaxLength(255);

                    b.Property<string>("NomUnidadeInfraestrutura")
                        .HasColumnName("NOM_UNIDADE_INFRAESTRUTURA")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Nome da unidade de infraestrutura")
                        .HasMaxLength(255);

                    b.HasKey("CodVinculoUnidadeEmpresa");

                    b.HasIndex("CodEmpresa");

                    b.ToTable("CAD_VINCULO_UNIDADE_EMPRESA");
                });

            modelBuilder.Entity("Infraero.Relprev.Infrastructure.Identity.WebProfileUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateEmailConfirmed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FirstAccess")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.AtribuicaoRelato", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Relato", "Relato")
                        .WithMany()
                        .HasForeignKey("CodRelato")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Infraero.Relprev.Domain.Entities.ResponsavelTecnico", "ResponsavelTecnico")
                        .WithMany()
                        .HasForeignKey("CodResponsavelTecnico")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Funcionalidade", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Modulo", null)
                        .WithMany("ListFuncionalidades")
                        .HasForeignKey("CodModulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Local", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.UnidadeInfraestrutura", "UnidadeInfraestrutura")
                        .WithMany()
                        .HasForeignKey("CodUnidadeInfraestrutura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.ParecerArquivo", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Parecer", null)
                        .WithMany("ListArquivo")
                        .HasForeignKey("CodParecer")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Relato", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.UnidadeInfraestrutura", "UnidadeInfraestrutura")
                        .WithMany()
                        .HasForeignKey("CodUnidadeInfraestrutura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.RelatoArquivo", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Relato", null)
                        .WithMany("ListArquivo")
                        .HasForeignKey("CodRelato")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.SubAssunto", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Assunto", null)
                        .WithMany("SubAssuntoList")
                        .HasForeignKey("CodAssunto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.SubLocal", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Local", "Local")
                        .WithMany()
                        .HasForeignKey("CodLocal")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.VinculoResponsavelEmpresa", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("CodEmpresa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Infraero.Relprev.Domain.Entities.ResponsavelTecnico", "ResponsavelTecnico")
                        .WithMany("ListVinculoResponsavelEmpresa")
                        .HasForeignKey("CodResponsavelTecnico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.VinculoUnidadeEmpresa", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Empresa", null)
                        .WithMany("ListVinculoUnidadeEmpresa")
                        .HasForeignKey("CodEmpresa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Infraero.Relprev.Infrastructure.Identity.WebProfileUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Infraero.Relprev.Infrastructure.Identity.WebProfileUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infraero.Relprev.Infrastructure.Identity.WebProfileUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Infraero.Relprev.Infrastructure.Identity.WebProfileUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
