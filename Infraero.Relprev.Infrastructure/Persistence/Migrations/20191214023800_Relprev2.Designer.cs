// <auto-generated />
using System;
using Infraero.Relprev.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infraero.Relprev.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191214023800_Relprev2")]
    partial class Relprev2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Ambiente", b =>
                {
                    b.Property<int>("CodAmbiente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodLocalidade")
                        .HasColumnType("int");

                    b.Property<int?>("CodLocalidadeNavigationCodLocalidade")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatFimVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscAmbiente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.HasKey("CodAmbiente");

                    b.HasIndex("CodLocalidadeNavigationCodLocalidade");

                    b.ToTable("Ambiente");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.AnexoRelato", b =>
                {
                    b.Property<int>("CodAnexo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("BinAnexo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("CodAtribuicaoRelato")
                        .HasColumnType("int");

                    b.Property<int?>("CodAtribuicaoRelatoNavigationCodAtribuicaoRelato")
                        .HasColumnType("int");

                    b.Property<int>("CodRelato")
                        .HasColumnType("int");

                    b.Property<int?>("CodRelatoNavigationCodRelato")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscAnexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipFormatoAnexo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodAnexo");

                    b.HasIndex("CodAtribuicaoRelatoNavigationCodAtribuicaoRelato");

                    b.HasIndex("CodRelatoNavigationCodRelato");

                    b.ToTable("AnexoRelato");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Assunto", b =>
                {
                    b.Property<int>("CodAssunto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscAssunto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodAssunto");

                    b.ToTable("Assunto");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.AtribuicaoRelato", b =>
                {
                    b.Property<int>("CodAtribuicaoRelato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodRelato")
                        .HasColumnType("int");

                    b.Property<int?>("CodRelatoNavigationCodRelato")
                        .HasColumnType("int");

                    b.Property<int>("CodResponsavelTecnico")
                        .HasColumnType("int");

                    b.Property<int?>("CodResponsavelTecnicoNavigationCodResponsavelTecnico")
                        .HasColumnType("int");

                    b.Property<int?>("CodSituacaoAtribuicao")
                        .HasColumnType("int");

                    b.Property<int?>("CodSituacaoAtribuicaoNavigationCodSituacaoAtribuicao")
                        .HasColumnType("int");

                    b.Property<int>("CodUsuarioAtribuidor")
                        .HasColumnType("int");

                    b.Property<long?>("CodUsuarioAtribuidorNavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscParecerTecnico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DthAtribuicao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DthFimAtendimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObsAtribuicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioRelprevCodUsuario")
                        .HasColumnType("int");

                    b.HasKey("CodAtribuicaoRelato");

                    b.HasIndex("CodRelatoNavigationCodRelato");

                    b.HasIndex("CodResponsavelTecnicoNavigationCodResponsavelTecnico");

                    b.HasIndex("CodSituacaoAtribuicaoNavigationCodSituacaoAtribuicao");

                    b.HasIndex("CodUsuarioAtribuidorNavigationId");

                    b.HasIndex("UsuarioRelprevCodUsuario");

                    b.ToTable("AtribuicaoRelato");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.ContratoUtilizacaoSistema", b =>
                {
                    b.Property<int>("CodContrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CodEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("CodEmpresaNavigationCodEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("CodLocalidade")
                        .HasColumnType("int");

                    b.Property<int?>("CodLocalidadeNavigationCodLocalidade")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatFimVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailContratada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailContratante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomContratada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomCotratante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAtoAdm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumContrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumTelefoneContratada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumTelefoneContratante")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodContrato");

                    b.HasIndex("CodEmpresaNavigationCodEmpresa");

                    b.HasIndex("CodLocalidadeNavigationCodLocalidade");

                    b.ToTable("ContratoUtilizacaoSistema");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("CodEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomRazaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumCnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumTelefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodEmpresa");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.EmpresaLocalidade", b =>
                {
                    b.Property<int>("CodEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CodEmpresaNavigationCodEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("CodLocalidade")
                        .HasColumnType("int");

                    b.Property<int?>("CodLocalidadeNavigationCodLocalidade")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.HasKey("CodEmpresa");

                    b.HasIndex("CodEmpresaNavigationCodEmpresa");

                    b.HasIndex("CodLocalidadeNavigationCodLocalidade");

                    b.ToTable("EmpresaLocalidade");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.EmpresaResponsavelTecnico", b =>
                {
                    b.Property<int>("CodEmpresaResponsavelTecnico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("CodLocalidade")
                        .HasColumnType("int");

                    b.Property<int?>("CodLocalidadeNavigationCodLocalidade")
                        .HasColumnType("int");

                    b.Property<int>("CodResponsavelTecnico")
                        .HasColumnType("int");

                    b.Property<int?>("CodResponsavelTecnicoNavigationCodResponsavelTecnico")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumDocumentoRepresentacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodEmpresaResponsavelTecnico");

                    b.HasIndex("CodLocalidadeNavigationCodLocalidade");

                    b.HasIndex("CodResponsavelTecnicoNavigationCodResponsavelTecnico");

                    b.ToTable("EmpresaResponsavelTecnico");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Evento", b =>
                {
                    b.Property<int>("CodEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodUsuario")
                        .HasColumnType("int");

                    b.Property<long?>("CodUsuarioNavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObsEvento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipEvento")
                        .HasColumnType("int");

                    b.Property<int?>("TipEventoNavigationTipEvento")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioRelprevCodUsuario")
                        .HasColumnType("int");

                    b.HasKey("CodEvento");

                    b.HasIndex("CodUsuarioNavigationId");

                    b.HasIndex("TipEventoNavigationTipEvento");

                    b.HasIndex("UsuarioRelprevCodUsuario");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.FuncaoSistema", b =>
                {
                    b.Property<int>("CodFuncao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscFuncao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlgVisivel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodFuncao");

                    b.ToTable("FuncaoSistema");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.HistoricoRelato", b =>
                {
                    b.Property<int>("CodHistoricoRelato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodHistorico")
                        .HasColumnType("int");

                    b.Property<int>("CodRelato")
                        .HasColumnType("int");

                    b.Property<int?>("CodRelatoNavigationCodRelato")
                        .HasColumnType("int");

                    b.Property<int?>("CodUsuario")
                        .HasColumnType("int");

                    b.Property<long?>("CodUsuarioNavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscHistorico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuarioRelprevCodUsuario")
                        .HasColumnType("int");

                    b.HasKey("CodHistoricoRelato");

                    b.HasIndex("CodRelatoNavigationCodRelato");

                    b.HasIndex("CodUsuarioNavigationId");

                    b.HasIndex("UsuarioRelprevCodUsuario");

                    b.ToTable("HistoricoRelato");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Localidade", b =>
                {
                    b.Property<int>("CodLocalidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatFimVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscLocalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndLocalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SigLocalidade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodLocalidade");

                    b.ToTable("Localidade");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Perfil", b =>
                {
                    b.Property<int>("CodPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlgAtivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlgPermiteAlteracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxtObservacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodPerfil");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.PerfilFuncao", b =>
                {
                    b.Property<int>("CodPerfilFuncao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodFuncao")
                        .HasColumnType("int");

                    b.Property<int?>("CodFuncaoNavigationCodFuncao")
                        .HasColumnType("int");

                    b.Property<int>("CodPerfil")
                        .HasColumnType("int");

                    b.Property<int?>("CodPerfilNavigationCodPerfil")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.HasKey("CodPerfilFuncao");

                    b.HasIndex("CodFuncaoNavigationCodFuncao");

                    b.HasIndex("CodPerfilNavigationCodPerfil");

                    b.ToTable("PerfilFuncao");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.PerfilUsuario", b =>
                {
                    b.Property<int>("CodPerfilUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodPerfil")
                        .HasColumnType("int");

                    b.Property<int?>("CodPerfilNavigationCodPerfil")
                        .HasColumnType("int");

                    b.Property<int>("CodUsuario")
                        .HasColumnType("int");

                    b.Property<long?>("CodUsuarioNavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatFimVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuarioRelprevCodUsuario")
                        .HasColumnType("int");

                    b.HasKey("CodPerfilUsuario");

                    b.HasIndex("CodPerfilNavigationCodPerfil");

                    b.HasIndex("CodUsuarioNavigationId");

                    b.HasIndex("UsuarioRelprevCodUsuario");

                    b.ToTable("PerfilUsuario");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Relato", b =>
                {
                    b.Property<int>("CodRelato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CodAmbiente")
                        .HasColumnType("int");

                    b.Property<int?>("CodAmbienteNavigationCodAmbiente")
                        .HasColumnType("int");

                    b.Property<int?>("CodAssunto")
                        .HasColumnType("int");

                    b.Property<int?>("CodAssuntoNavigationCodAssunto")
                        .HasColumnType("int");

                    b.Property<int?>("CodLocalidade")
                        .HasColumnType("int");

                    b.Property<int?>("CodLocalidadeNavigationCodLocalidade")
                        .HasColumnType("int");

                    b.Property<int>("CodSituacaoRelato")
                        .HasColumnType("int");

                    b.Property<int?>("CodSituacaoRelatoNavigationCodSituacaoRelato")
                        .HasColumnType("int");

                    b.Property<int?>("CodSubAmbiente")
                        .HasColumnType("int");

                    b.Property<int?>("CodSubAmbienteNavigationCodSubAmbiente")
                        .HasColumnType("int");

                    b.Property<int?>("CodSubAssunto")
                        .HasColumnType("int");

                    b.Property<int?>("CodSubAssuntoNavigationCodSubAssunto")
                        .HasColumnType("int");

                    b.Property<int?>("CodUsuarioRelator")
                        .HasColumnType("int");

                    b.Property<long?>("CodUsuarioRelatorNavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatOcorrencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscEnvolvidosOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DscLocalOcorrenciaRelator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DscOcorrenciaCorrigida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DscOcorrenciaRelator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailRelator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorOcorrencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomEmpresaRelator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomRelator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumTelefoneRelator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioRelprevCodUsuario")
                        .HasColumnType("int");

                    b.HasKey("CodRelato");

                    b.HasIndex("CodAmbienteNavigationCodAmbiente");

                    b.HasIndex("CodAssuntoNavigationCodAssunto");

                    b.HasIndex("CodLocalidadeNavigationCodLocalidade");

                    b.HasIndex("CodSituacaoRelatoNavigationCodSituacaoRelato");

                    b.HasIndex("CodSubAmbienteNavigationCodSubAmbiente");

                    b.HasIndex("CodSubAssuntoNavigationCodSubAssunto");

                    b.HasIndex("CodUsuarioRelatorNavigationId");

                    b.HasIndex("UsuarioRelprevCodUsuario");

                    b.ToTable("Relato");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.ResponsavelTecnico", b =>
                {
                    b.Property<int>("CodResponsavelTecnico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("EndEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomResponsavelTecnico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumCpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumTelefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodResponsavelTecnico");

                    b.ToTable("ResponsavelTecnico");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.SituacaoAtribuicaoRelato", b =>
                {
                    b.Property<int>("CodSituacaoAtribuicao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscSituacaoAtribuicao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodSituacaoAtribuicao");

                    b.ToTable("SituacaoAtribuicaoRelato");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.SituacaoRelato", b =>
                {
                    b.Property<int>("CodSituacaoRelato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscSituacaoRelato")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodSituacaoRelato");

                    b.ToTable("SituacaoRelato");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.SubAmbiente", b =>
                {
                    b.Property<int>("CodSubAmbiente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CodAmbiente")
                        .HasColumnType("int");

                    b.Property<int?>("CodAmbienteNavigationCodAmbiente")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatFimVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscSubAmbiente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.HasKey("CodSubAmbiente");

                    b.HasIndex("CodAmbienteNavigationCodAmbiente");

                    b.ToTable("SubAmbiente");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.SubAssunto", b =>
                {
                    b.Property<int>("CodSubAssunto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodAssunto")
                        .HasColumnType("int");

                    b.Property<int?>("CodAssuntoNavigationCodAssunto")
                        .HasColumnType("int");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscSubAssunto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodSubAssunto");

                    b.HasIndex("CodAssuntoNavigationCodAssunto");

                    b.ToTable("SubAssunto");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.TipoEvento", b =>
                {
                    b.Property<int>("TipEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscTipoEvento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipEvento");

                    b.ToTable("TipoEvento");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.UnidadeInfraestrutura", b =>
                {
                    b.Property<int>("CodUnidadeInfraestrutura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodUnidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtFimVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtIniVigencia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpresaCodEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodUnidadeInfraestrutura");

                    b.HasIndex("EmpresaCodEmpresa");

                    b.ToTable("UnidadeInfraestrutura");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Reminder")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.UsuarioLocalidade", b =>
                {
                    b.Property<int>("CodUsuarioLocalidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodLocalidade")
                        .HasColumnType("int");

                    b.Property<int?>("CodLocalidadeNavigationCodLocalidade")
                        .HasColumnType("int");

                    b.Property<int>("CodUsuario")
                        .HasColumnType("int");

                    b.Property<long?>("CodUsuarioNavigationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuarioRelprevCodUsuario")
                        .HasColumnType("int");

                    b.HasKey("CodUsuarioLocalidade");

                    b.HasIndex("CodLocalidadeNavigationCodLocalidade");

                    b.HasIndex("CodUsuarioNavigationId");

                    b.HasIndex("UsuarioRelprevCodUsuario");

                    b.ToTable("UsuarioLocalidade");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.UsuarioRelprev", b =>
                {
                    b.Property<int>("CodUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DscLogin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DscSenha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DthRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("EndEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlgPrimeiroAcesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlgUsuarioBloqueado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumCpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumTelefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtdTentativasIncorretas")
                        .HasColumnType("int");

                    b.HasKey("CodUsuario");

                    b.ToTable("UsuarioRelprev");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Ambiente", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Localidade", "CodLocalidadeNavigation")
                        .WithMany("Ambiente")
                        .HasForeignKey("CodLocalidadeNavigationCodLocalidade");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.AnexoRelato", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.AtribuicaoRelato", "CodAtribuicaoRelatoNavigation")
                        .WithMany("AnexoRelato")
                        .HasForeignKey("CodAtribuicaoRelatoNavigationCodAtribuicaoRelato");

                    b.HasOne("Infraero.Relprev.Domain.Entities.Relato", "CodRelatoNavigation")
                        .WithMany("AnexoRelato")
                        .HasForeignKey("CodRelatoNavigationCodRelato");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.AtribuicaoRelato", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Relato", "CodRelatoNavigation")
                        .WithMany("AtribuicaoRelato")
                        .HasForeignKey("CodRelatoNavigationCodRelato");

                    b.HasOne("Infraero.Relprev.Domain.Entities.ResponsavelTecnico", "CodResponsavelTecnicoNavigation")
                        .WithMany("AtribuicaoRelato")
                        .HasForeignKey("CodResponsavelTecnicoNavigationCodResponsavelTecnico");

                    b.HasOne("Infraero.Relprev.Domain.Entities.SituacaoAtribuicaoRelato", "CodSituacaoAtribuicaoNavigation")
                        .WithMany("AtribuicaoRelato")
                        .HasForeignKey("CodSituacaoAtribuicaoNavigationCodSituacaoAtribuicao");

                    b.HasOne("Infraero.Relprev.Domain.Entities.Usuario", "CodUsuarioAtribuidorNavigation")
                        .WithMany()
                        .HasForeignKey("CodUsuarioAtribuidorNavigationId");

                    b.HasOne("Infraero.Relprev.Domain.Entities.UsuarioRelprev", null)
                        .WithMany("AtribuicaoRelato")
                        .HasForeignKey("UsuarioRelprevCodUsuario");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.ContratoUtilizacaoSistema", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Empresa", "CodEmpresaNavigation")
                        .WithMany("ContratoUtilizacaoSistema")
                        .HasForeignKey("CodEmpresaNavigationCodEmpresa");

                    b.HasOne("Infraero.Relprev.Domain.Entities.Localidade", "CodLocalidadeNavigation")
                        .WithMany("ContratoUtilizacaoSistema")
                        .HasForeignKey("CodLocalidadeNavigationCodLocalidade");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.EmpresaLocalidade", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Empresa", "CodEmpresaNavigation")
                        .WithMany("EmpresaLocalidade")
                        .HasForeignKey("CodEmpresaNavigationCodEmpresa");

                    b.HasOne("Infraero.Relprev.Domain.Entities.Localidade", "CodLocalidadeNavigation")
                        .WithMany("EmpresaLocalidade")
                        .HasForeignKey("CodLocalidadeNavigationCodLocalidade");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.EmpresaResponsavelTecnico", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Localidade", "CodLocalidadeNavigation")
                        .WithMany("EmpresaResponsavelTecnico")
                        .HasForeignKey("CodLocalidadeNavigationCodLocalidade");

                    b.HasOne("Infraero.Relprev.Domain.Entities.ResponsavelTecnico", "CodResponsavelTecnicoNavigation")
                        .WithMany("EmpresaResponsavelTecnico")
                        .HasForeignKey("CodResponsavelTecnicoNavigationCodResponsavelTecnico");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Evento", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Usuario", "CodUsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("CodUsuarioNavigationId");

                    b.HasOne("Infraero.Relprev.Domain.Entities.TipoEvento", "TipEventoNavigation")
                        .WithMany("Evento")
                        .HasForeignKey("TipEventoNavigationTipEvento");

                    b.HasOne("Infraero.Relprev.Domain.Entities.UsuarioRelprev", null)
                        .WithMany("Evento")
                        .HasForeignKey("UsuarioRelprevCodUsuario");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.HistoricoRelato", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Relato", "CodRelatoNavigation")
                        .WithMany("HistoricoRelato")
                        .HasForeignKey("CodRelatoNavigationCodRelato");

                    b.HasOne("Infraero.Relprev.Domain.Entities.Usuario", "CodUsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("CodUsuarioNavigationId");

                    b.HasOne("Infraero.Relprev.Domain.Entities.UsuarioRelprev", null)
                        .WithMany("HistoricoRelato")
                        .HasForeignKey("UsuarioRelprevCodUsuario");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.PerfilFuncao", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.FuncaoSistema", "CodFuncaoNavigation")
                        .WithMany("PerfilFuncao")
                        .HasForeignKey("CodFuncaoNavigationCodFuncao");

                    b.HasOne("Infraero.Relprev.Domain.Entities.Perfil", "CodPerfilNavigation")
                        .WithMany("PerfilFuncao")
                        .HasForeignKey("CodPerfilNavigationCodPerfil");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.PerfilUsuario", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Perfil", "CodPerfilNavigation")
                        .WithMany("PerfilUsuario")
                        .HasForeignKey("CodPerfilNavigationCodPerfil");

                    b.HasOne("Infraero.Relprev.Domain.Entities.Usuario", "CodUsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("CodUsuarioNavigationId");

                    b.HasOne("Infraero.Relprev.Domain.Entities.UsuarioRelprev", null)
                        .WithMany("PerfilUsuario")
                        .HasForeignKey("UsuarioRelprevCodUsuario");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.Relato", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Ambiente", "CodAmbienteNavigation")
                        .WithMany("Relato")
                        .HasForeignKey("CodAmbienteNavigationCodAmbiente");

                    b.HasOne("Infraero.Relprev.Domain.Entities.Assunto", "CodAssuntoNavigation")
                        .WithMany("Relato")
                        .HasForeignKey("CodAssuntoNavigationCodAssunto");

                    b.HasOne("Infraero.Relprev.Domain.Entities.Localidade", "CodLocalidadeNavigation")
                        .WithMany("Relato")
                        .HasForeignKey("CodLocalidadeNavigationCodLocalidade");

                    b.HasOne("Infraero.Relprev.Domain.Entities.SituacaoRelato", "CodSituacaoRelatoNavigation")
                        .WithMany("Relato")
                        .HasForeignKey("CodSituacaoRelatoNavigationCodSituacaoRelato");

                    b.HasOne("Infraero.Relprev.Domain.Entities.SubAmbiente", "CodSubAmbienteNavigation")
                        .WithMany("Relato")
                        .HasForeignKey("CodSubAmbienteNavigationCodSubAmbiente");

                    b.HasOne("Infraero.Relprev.Domain.Entities.SubAssunto", "CodSubAssuntoNavigation")
                        .WithMany("Relato")
                        .HasForeignKey("CodSubAssuntoNavigationCodSubAssunto");

                    b.HasOne("Infraero.Relprev.Domain.Entities.Usuario", "CodUsuarioRelatorNavigation")
                        .WithMany()
                        .HasForeignKey("CodUsuarioRelatorNavigationId");

                    b.HasOne("Infraero.Relprev.Domain.Entities.UsuarioRelprev", null)
                        .WithMany("Relato")
                        .HasForeignKey("UsuarioRelprevCodUsuario");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.SubAmbiente", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Ambiente", "CodAmbienteNavigation")
                        .WithMany("SubAmbiente")
                        .HasForeignKey("CodAmbienteNavigationCodAmbiente");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.SubAssunto", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Assunto", "CodAssuntoNavigation")
                        .WithMany("SubAssunto")
                        .HasForeignKey("CodAssuntoNavigationCodAssunto");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.UnidadeInfraestrutura", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Empresa", null)
                        .WithMany("UnidadeInfraestrutura")
                        .HasForeignKey("EmpresaCodEmpresa");
                });

            modelBuilder.Entity("Infraero.Relprev.Domain.Entities.UsuarioLocalidade", b =>
                {
                    b.HasOne("Infraero.Relprev.Domain.Entities.Localidade", "CodLocalidadeNavigation")
                        .WithMany("UsuarioLocalidade")
                        .HasForeignKey("CodLocalidadeNavigationCodLocalidade");

                    b.HasOne("Infraero.Relprev.Domain.Entities.Usuario", "CodUsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("CodUsuarioNavigationId");

                    b.HasOne("Infraero.Relprev.Domain.Entities.UsuarioRelprev", null)
                        .WithMany("UsuarioLocalidade")
                        .HasForeignKey("UsuarioRelprevCodUsuario");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
